<?xml version="1.0" encoding="UTF-8"?>
<!--****************************************************************************
 * Build Robusta for CI & Wrap for Eclipse Update Site
 ****************************************************************************-->
<project name="Robusta" default="all">
	<property environment="env"/>
	<fail unless="env.ECLIPSE_HOME" message="ECLIPSE_HOME not set."/>
	<property name="ECLIPSE_HOME" value="${env.ECLIPSE_HOME}"/>
	<property name="debuglevel" value="source,lines,vars"/>
	<property name="target" value="1.6"/>
	<property name="source" value="1.6"/>
	<!-- Load properties from manifest file and plugin.properties file-->
	<property file="${basedir}/META-INF/MANIFEST.MF" prefix="pluginManifest"/>
	<property file="${basedir}/plugin.properties" prefix="pluginProperties"/>
	
	
	<property name="jar-file-name" value="taipeitech.csie.robusta_${pluginManifest.Bundle-Version}.jar"/>
	<property name="jar-file-test-name" value="taipeitech.csie.test.robusta_${pluginManifest.Bundle-Version}.jar"/>
	<property name="rl-jar-file-name" value="taipeitech.csie.robusta.agile.exception_1.0.0.jar"/>
	<property name="result-folder" value="${basedir}/result"/>
	<property name="xml-folder" value="${result-folder}/xml"/>
	<property name="release-folder" value="${basedir}/release"/>
	<property name="update-folder" value="${result-folder}/update"/>
	<property name="feature-folder" value="${update-folder}/features"/>
	<property name="plugin-folder" value="${update-folder}/dropins"/>
	<property name="license-folder" value="${update-folder}/licenses"/>
	<property name="update-lib-folder" value="${update-folder}/lib"/>
	<property name="src-folder" value="${basedir}/src"/>
	<property name="test-folder" value="${basedir}/test"/>
	<property name="bin-folder" value="${basedir}/bin"/>
	<property name="lib-folder" value="${basedir}/lib"/>
	<!-- Report -->
	<property name="report-folder" value="${basedir}/report"/>
	<property name="update-id" value="taipeitech.csie.robusta_${pluginManifest.Bundle-Version}"/>
	<property name="eclipse-public-license" value="epl-v10.html"/>
	<property name="notice" value="notice.html"/>
	<property name="plugin-bundle-name" value="taipeitech.csie.robusta" />
	<property name="pde-test-data" value="${basedir}/../../junit-workspace" />
	<property name="pde-test-dev" value="file:${basedir}/../.metadata/.plugins/org.eclipse.pde.core/pde-junit/dev.properties" />
		
	<!-- project lib -->
	<path id="Plug-in Dependencies.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.ui_3.6.2.M20110203-1100.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.swt_3.6.2.v3659c.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.swt.win32.win32.x86_64_3.6.2.v3659c.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jface_3.6.2.M20110210-1200.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.commands_3.6.0.I20100512-1500.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.ui.workbench_3.6.2.M20110210-1200.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.runtime_3.6.0.v20100505.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.osgi_3.6.2.R36x_v20110210.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.equinox.common_3.6.0.v20100503.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.jobs_3.5.1.R36x_v20100824.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.runtime.compatibility.registry_3.3.0.v20100520/runtime_registry_compatibility.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.equinox.registry_3.5.0.v20100503.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.equinox.preferences_3.3.0.v20100503.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.contenttype_3.4.100.v20100505-1235.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.equinox.app_1.3.1.R36x_v20100803.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt_3.6.1.v201102101200.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.core_3.6.2.v_A76_R36x.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.compiler.apt_1.0.300.v20100513-0845.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.compiler.tool_1.0.100.v_A76_R36x.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.resources_3.6.1.R36x_v20110131-1630.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.ltk.core.refactoring_3.5.101.r362_v20101117-0800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.ltk.ui.refactoring_3.5.0.v20100526-0800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jface.text_3.6.1.r361_v20100825-0800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.text_3.5.0.v20100601-1300.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.ui.editors_3.6.1.r361_v20100825-0800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.core.filebuffers_3.5.100.v20100520-0800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.ui_3.6.2.r362_v20110203.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.ui.workbench.texteditor_3.6.1.r361_v20100714-0800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.ui.console_3.5.0.v20100526.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.ui.ide_3.6.2.M20101201-0800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.junit_3.6.1.r361_v20100825-0800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.junit.core_3.6.1.r361_v20100825-0800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.launching_3.5.200.v20110105_r362.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit_4.8.1.v4_8_1_v20100427-1100/junit.jar"/>
		<pathelement location="${ECLIPSE_HOME}/plugins/org.hamcrest.core_1.1.0.v20090501071000.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.jdt.core.manipulation_1.3.0.v20100520-0800.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-antlr.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-apache-bcel.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-apache-bsf.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-apache-log4j.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-apache-oro.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-apache-regexp.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-apache-resolver.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-commons-logging.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-commons-net.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-jai.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-javamail.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-jdepend.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-jmf.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-jsch.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-launcher.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-netrexx.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-nodeps.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-starteam.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-stylebook.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-swing.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-trax.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.apache.ant_1.7.1.v20100518-1145/lib/ant-weblogic.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.eclipse.ui.views_3.5.1.M20110202-0800.jar"/>
        <pathelement location="lib/commons-lang-2.3.jar"/>
        <pathelement location="lib/slf4j-api-1.5.0.jar"/>
        <pathelement location="lib/slf4j-log4j12-1.5.0.jar"/>
        <pathelement location="lib/log4j-1.2.15.jar"/>
        <pathelement location="lib/jdom.jar"/>
        <pathelement location="lib/jfreechart-1.0.8a.jar"/>
        <pathelement location="lib/jcommon-1.0.12.jar"/>
        <pathelement location="lib/loc_counter.jar"/>
    </path>
	
	<path id="Robusta.classpath">
		<pathelement location="bin"/>
        <pathelement location="lib/"/>
	 	<path refid="Plug-in Dependencies.libraryclasspath"/>
    </path>
	
	<!-- OS picker -->
	<condition property="isMac">
		<os family="mac"/>
	</condition>

	<condition property="isWindows">
		<os family="windows"/>
	</condition>

	<condition property="isUnix">
		<os family="unix"/>
	</condition>
	
	<!-- main target -->
	<target name="all" depends="init, build-project, product-test-jar, run-pde-junit-test, junit-test, junit-report, 
								product-jar, agile-jar, zip-product">
		<echo message="Ant build complete"/>
	</target>
	
	<!-- initialisation -->
    <target name="init">
		
    	<delete quiet="true" dir="${bin-folder}"/>
    	<delete quiet="true" dir="${result-folder}"/>
    	<delete quiet="true" dir="${basedir}/../../junit-workspace" />
        <mkdir dir="${bin-folder}"/>
    	<mkdir dir="${result-folder}"/>
    	<mkdir dir="${xml-folder}"/>
		<mkdir dir="${update-folder}"/>
		<mkdir dir="${plugin-folder}"/>
		<mkdir dir="${license-folder}"/>
		<mkdir dir="${update-lib-folder}"/>
		
		<copy todir="${license-folder}">
			<fileset dir="${release-folder}" includes="*.html"/>
		</copy>
		<copy todir="${update-folder}">
			<fileset dir="${release-folder}" includes="*.txt"/>
		</copy>
        <copy includeemptydirs="false" todir="${bin-folder}">
            <fileset dir="${src-folder}">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="${bin-folder}">
            <fileset dir="${test-folder}">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
		<copy includeemptydirs="false" todir="${bin-folder}/icons">
			<fileset dir="${basedir}/icons"/>
		</copy>
		<copy includeemptydirs="false" todir="${bin-folder}/lib">
			<fileset dir="${lib-folder}"/>
		</copy>
    	<!-- Temporary remove the language folder
    	<copy includeemptydirs="false" todir="${bin-folder}">
			<fileset dir="${basedir}/language"/>
		</copy>
		-->
    	<copy includeemptydirs="false" todir="${bin-folder}/META-INF">
			<fileset dir="${basedir}/META-INF"/>
		</copy>
		<!-- REPORT -->
		<copy includeemptydirs="false" todir="${bin-folder}/report">
			<fileset dir="${report-folder}"/>
		</copy>
		
    	<copy file="${basedir}/plugin.properties" tofile="${bin-folder}/plugin.properties"/>
    	<copy file="${basedir}/build.properties" tofile="${bin-folder}/build.properties"/>
    	<copy file="${basedir}/robusta_en_US.properties" tofile="${bin-folder}/robusta_en_US.properties"/>
    	<copy file="${basedir}/robusta_zh_TW.properties" tofile="${bin-folder}/robusta_zh_TW.properties"/>
    	<!-- 
	Do not copy anymore, modified the plugin.xml to add extension for headless by xmltask instead
	<copy file="${basedir}/plugin.xml" tofile="${bin-folder}/plugin.xml"/>
	-->
    	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpath="external_lib/ant_lib/xmltask.jar"/>
    	<xmltask source="${basedir}/plugin.xml" dest="${bin-folder}/plugin.xml" encoding="UTF-8">
    		<insert path="/plugin">
    			<![CDATA[ 
                      <extension id="standalone"
    			         point="org.eclipse.core.runtime.applications">
    			      <application
    			            cardinality="singleton-global"
    			            thread="main"
    			            visible="true">
    			         <run class="ntut.csie.rleht.StandAloneApp" />
    			      </application>
    			   </extension>
    			]]>
    		</insert>
    	</xmltask>
    </target>
	
	<!-- compile project -->
    <target name="build-project">
        <javac srcdir="${src-folder}:${test-folder}" debug="true" debuglevel="${debuglevel}" destdir="${bin-folder}" source="${source}" target="${target}" includeantruntime="false" encoding="UTF-8">
            <classpath refid="Robusta.classpath"/>
        </javac>
    </target>
		
	<!-- wrap bin folder to test jar file -->
	<target name="product-test-jar">
		<jar destfile="${plugin-folder}/${jar-file-name}" filesetmanifest="mergewithoutmain" basedir="${bin-folder}"/>
		<copy file="${plugin-folder}/${jar-file-name}" todir="${ECLIPSE_HOME}/plugins" overwrite="true" />
    </target>
	
	<!-- run pde junit test -->
	<target name="run-pde-junit-test">
		<java classname="pde.test.utils.PDETestPortLocator" fork="yes">
			<classpath>
				<path location="${bin-folder}" />
			</classpath>
		</java>
		<waitfor maxwait="10" maxwaitunit="second" checkevery="100" checkeveryunit="millisecond">
			<available file="pde_test_port.properties" />
		</waitfor>
		<property file="pde_test_port.properties" />
		<echo message="Using port ${pde.test.port} for listening to PDE Test run" />
		<parallel>
			<daemons>
				<antcall target="run-pde-test-listener" />
			</daemons>
			<sequential>
				<sleep seconds="1" />
				<antcall target="pde-test"/>
			</sequential>
		</parallel>
		
		<move todir="${xml-folder}">
            <fileset dir=".">
                <include name="**/TEST-*.xml"/>
            </fileset>
        </move>
		
		<delete quiet="true" file="pde_test_port.properties"/>
		<delete quiet="true" file="${plugin-folder}/${jar-file-name}"/>
		<delete quiet="true" file="${ECLIPSE_HOME}/plugins/${jar-file-name}"/>
	</target>
	
	<target name="pde-test">
		<property file="${basedir}/build.properties"/>
		<java jvm="javaw.exe" jar="${ECLIPSE_HOME}/plugins/org.eclipse.equinox.launcher_1.1.1.R36x_v20101122_1400.jar" fork="yes" maxmemory="512m">
			<jvmarg value="-Dfile.encoding=UTF-8" />
			<arg line="-version 3" />
			<arg line="-os win32" />
			<arg line="-ws win32" />
			<arg line="-arch x86_64" />
			<arg line="-port ${pde.test.port}" />
			<arg line="-testpluginname ${plugin-bundle-name}" />
			<arg line="-testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader" />
			<arg line="-loaderpluginname org.eclipse.jdt.junit4.runtime" />
			<arg line="-classNames ntut.csie.AllTest.AllJUnitPluginTests" /> <!-- ntut.csie.AllTest.AllJUnitPluginTests -->
			<arg line="-application org.eclipse.pde.junit.runtime.uitestapplication" />
			<arg line="-testlistener org.eclipse.test.XMLTestListener" />
			<arg line="-product org.eclipse.sdk.ide" />
			<arg line="-data ${pde-test-data}" />
			<arg line="-dev ${pde-test-dev}" />
			<arg line="-debug -consoleLog" />
		</java>
	</target>
	
	<target name="run-pde-test-listener">
		<java classname="pde.test.utils.PDETestResultsCollector" fork="yes">
			<sysproperty key="DEBUG" value="true" />
			<arg line="ntut.csie.AllTest.AllJUnitPluginTests ${pde.test.port}" />
			<jvmarg value="-Duser=admin -Dpasswd=admin" />
			<classpath refid="Robusta.classpath" />
		</java>
	</target>
	
	<!-- run junit test -->
	<target name="junit-test">
		<junit printsummary="yes" fork="yes">
			<jvmarg value="-Dfile.encoding=UTF-8" />
			<formatter type="xml"/>
			<batchtest todir="${xml-folder}">
				<fileset dir="${bin-folder}">
					<include name="**/AllJUnitTests.class" />
				</fileset>
			</batchtest>
			<classpath refid="Robusta.classpath" />
		</junit>
	</target>
	
	<!-- junit report -->
	<target name="junit-report">
		<junitreport todir="${xml-folder}">
			<fileset dir="${xml-folder}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${result-folder}"/>
		</junitreport>
	</target>
	 
	<!-- wrap bin folder to jar file -->
	<target name="product-jar">
    		<jar destfile="${plugin-folder}/${jar-file-name}" filesetmanifest="mergewithoutmain" basedir="${bin-folder}" excludes="**/filemaker/, **/*Test.class">
		</jar>
	</target>
	
	<target name="agile-jar">
		<jar destfile="${update-lib-folder}/${rl-jar-file-name}" filesetmanifest="mergewithoutmain" basedir="${bin-folder}" includes="**/RTag.class, **/Robustness.class, **/SuppressSmell.class">
			<manifest>
				<attribute name="ClassPath" value="."/>
			</manifest>
		</jar>
	</target>

	<!-- write a site.xml for eclipse update -->
	<target name="write-site-xml">
		<echoxml file="${update-folder}/site.xml">
			<site>
				<feature url="features/${jar-file-name}" id="${update-id}" version="${pluginManifest.Bundle-Version}"/>
			</site>
		</echoxml>
	</target>
	
	<!-- write a feature.xml for eclipse update -->
	<target name="write-feature-xml">
		<echoxml file="${feature-folder}/feature.xml">
			<feature
				id="${update-id}"
				label="Robustaclipse"
				version="${pluginManifest.Bundle-Version}"
				provider-name="${pluginProperties.Bundle-Vendor}"
				plugin="${update-id}">
 
				<description>
					Release for free.
				</description>

				<copyright>
				  Copyright 2000-2012, 版權所有
				</copyright>
 
				<license url="http://www.gnu.org/licenses/gpl.txt"/>
 
				<url>
					<update label="updates" url="這裡填你最後發布的update地址"/>
				</url>
			 	
				<requires>
					<import plugin="org.eclipse.ui.views"/>
					<import plugin="org.eclipse.jface.text"/>
					<import plugin="org.eclipse.ui.workbench.texteditor"/>
					<import plugin="org.eclipse.ui.editors"/>
					<import plugin="org.eclipse.core.runtime"/>
					<import plugin="org.eclipse.ui.ide"/>
					<import plugin="org.eclipse.ui"/>
					<import plugin="org.eclipse.jdt.ui"/>
					<import plugin="org.eclipse.jdt.core"/>
					<import plugin="org.eclipse.ui.console"/>
					<import plugin="org.eclipse.debug.ui"/>
				</requires>
 
				<plugin 
					id="${update-id}"
					download-size="0"
					install-size="0"
					version="${pluginManifest.Bundle-Version}"/>
			</feature>
		</echoxml>
	</target>
	
	<target name="zip-product">
		<zip destfile="${update-id}.zip" basedir="${update-folder}"/>
	</target>
</project>
